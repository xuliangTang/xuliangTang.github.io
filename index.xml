<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Lain Blog</title><link>http://xuliangtang.github.io/</link><description>This is my cool site</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 05 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="http://xuliangtang.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>k8s远程进入容器terminal</title><link>http://xuliangtang.github.io/posts/k8s-pod-shell/</link><pubDate>Thu, 05 Jan 2023 00:00:00 +0000</pubDate><author>xuliangTang</author><guid>http://xuliangtang.github.io/posts/k8s-pod-shell/</guid><description>K8s 实现的“进入某个容器”的功能，底层本质是 Docker 容器通过 exec 进入容器的扩展。本质是新建了一个“与目标容器，共享 namespace 的”新的 shell 进程。所以该 shell 进程，看到</description></item><item><title>K8s list-watch 机制和 Informer 模块</title><link>http://xuliangtang.github.io/posts/k8s-list-watch/</link><pubDate>Sun, 18 Dec 2022 18:29:49 +0800</pubDate><author>xuliangTang</author><guid>http://xuliangtang.github.io/posts/k8s-list-watch/</guid><description>在 Kubernetes 中，有5个主要的组件，分别是 master 节点上的 kube-api-server、kube-controller-manager 和 kube-sche</description></item><item><title>K8s client-go</title><link>http://xuliangtang.github.io/posts/k8s-go/</link><pubDate>Sun, 18 Dec 2022 00:00:00 +0000</pubDate><author>xuliangTang</author><guid>http://xuliangtang.github.io/posts/k8s-go/</guid><description>client-go 是负责与 Kubernetes APIServer 服务进行交互的客户端库，利用 Client-Go 与 Kubernetes APIServer 进行的交互访问，来对 Kubernetes 中的各类资源对象进行管理操作，包括内置的资源对象及 CRD client-go 客户端 Client-Go 共提供</description></item><item><title>调度器 kube-schedule</title><link>http://xuliangtang.github.io/posts/kube-schedule/</link><pubDate>Tue, 13 Dec 2022 00:00:00 +0000</pubDate><author>xuliangTang</author><guid>http://xuliangtang.github.io/posts/kube-schedule/</guid><description>Kube-scheduler 是 Kubernetes 集群默认的调度器，并且是控制面中一个核心组件。scheduler 通过 kubernetes 的监测（Watch）机制来发现集群中新创建且尚未被调度到 Node 上的 P</description></item><item><title>Pod 水平自动扩缩 — HPA</title><link>http://xuliangtang.github.io/posts/hpa/</link><pubDate>Mon, 12 Dec 2022 00:00:00 +0000</pubDate><author>xuliangTang</author><guid>http://xuliangtang.github.io/posts/hpa/</guid><description>Horizontal Pod Autoscaling（Pod 水平自动伸缩），简称HPA。它可以基于 CPU 利用率或其他指标自动扩缩 ReplicationController</description></item><item><title>PV 和 PVC</title><link>http://xuliangtang.github.io/posts/pv_pvc/</link><pubDate>Sun, 11 Dec 2022 00:00:00 +0000</pubDate><author>xuliangTang</author><guid>http://xuliangtang.github.io/posts/pv_pvc/</guid><description>为了能够屏蔽底层存储实现的细节，方便用户使用，k8s 引入 PV 和 PVC 两种资源对象。Persistent Volume 提供存储资源（并实现），Persisten</description></item><item><title>Service</title><link>http://xuliangtang.github.io/posts/service/</link><pubDate>Sun, 11 Dec 2022 00:00:00 +0000</pubDate><author>xuliangTang</author><guid>http://xuliangtang.github.io/posts/service/</guid><description>在 Kubernetes 中，pod 是应用程序的载体，我们可以通过 pod 的 ip 来访问应用程序，但是 pod 的 ip 地址不是固定的，这也就意味着不方便直接采用 pod 的 ip 对服务进行访问 为</description></item><item><title>Secret</title><link>http://xuliangtang.github.io/posts/secret/</link><pubDate>Sat, 10 Dec 2022 00:00:00 +0000</pubDate><author>xuliangTang</author><guid>http://xuliangtang.github.io/posts/secret/</guid><description>Secret 是一种包含少量敏感信息例如密码、OAuth 令牌和 SSH 密钥。 将这些信息放在 secret 中比放在 Pod 的定义或者 容器镜像中来说更加安全和灵活。 Kubernetes 提供若干种内置</description></item><item><title>ConfigMap</title><link>http://xuliangtang.github.io/posts/configmap/</link><pubDate>Fri, 09 Dec 2022 00:00:00 +0000</pubDate><author>xuliangTang</author><guid>http://xuliangtang.github.io/posts/configmap/</guid><description>ConfigMap 是一种 API 对象，用来将非机密性的数据保存到键值对中。使用时， Pod 可以将其用作环境变量、命令行参数或者存储卷中的配置文件。 ConfigMap 将你的环境配置信息和</description></item><item><title>Pod、ReplicaSet 和 Deployment</title><link>http://xuliangtang.github.io/posts/pod/</link><pubDate>Sun, 04 Dec 2022 00:00:00 +0000</pubDate><author>xuliangTang</author><guid>http://xuliangtang.github.io/posts/pod/</guid><description>文档：Pod | Kubernetes Pod 是可以在 Kubernetes 中创建和管理的、最小的可部署的计算单元。它是一个或多个容器的组合。这些容器共享存储、网络和命名空间，以及如何运行</description></item></channel></rss>